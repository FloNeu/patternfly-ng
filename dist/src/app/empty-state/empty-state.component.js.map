{"version":3,"file":"empty-state.component.js","sourceRoot":"","sources":["../../../../src/app/empty-state/empty-state.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EACL,SAAS,EACT,YAAY,EACZ,KAAK,EAEL,MAAM,EACN,iBAAiB,EAClB,MAAM,eAAe,CAAC;AAGvB,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAC;AAExD,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,QAAQ,CAAC;AAEtD;;GAEG;AAOH,IAAa,mBAAmB;IAgB9B;;OAEG;IACH;QAbA;;WAEG;QACuB,mBAAc,GAAG,IAAI,YAAY,EAAE,CAAC;QAEtD,kBAAa,GAAG;YACtB,KAAK,EAAE,oBAAoB;SACR,CAAC;IAOtB,CAAC;IAED,iBAAiB;IAEjB;;OAEG;IACH,sCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED;;OAEG;IACH,uCAAS,GAAT;QACE,8BAA8B;QAC9B,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;IACH,CAAC;IAED;;OAEG;IACO,yCAAW,GAArB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;YAC9B,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAC5C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC9C,CAAC;QACD,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,CAAC;IAED,UAAU;IAEF,0CAAY,GAApB,UAAqB,MAAc;QACjC,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC;IACH,CAAC;IACH,0BAAC;AAAD,CAAC,AA5DD,IA4DC;AAxDU;IAAR,KAAK,EAAE;8BAAS,gBAAgB;mDAAC;AAKR;IAAzB,MAAM,CAAC,gBAAgB,CAAC;;2DAAqC;AATnD,mBAAmB;IAN/B,SAAS,CAAC;QACT,aAAa,EAAE,iBAAiB,CAAC,IAAI;QACrC,QAAQ,EAAE,kBAAkB;QAC5B,SAAS,EAAE,CAAC,8BAA8B,CAAC;QAC3C,WAAW,EAAE,8BAA8B;KAC5C,CAAC;;GACW,mBAAmB,CA4D/B;SA5DY,mBAAmB","sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { Action } from '../action/action';\nimport { EmptyStateConfig } from './empty-state-config';\n\nimport { cloneDeep, defaults, isEqual } from 'lodash';\n\n/**\n * Component for rendering an empty state.\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-empty-state',\n  styleUrls: ['./empty-state.component.less'],\n  templateUrl: './empty-state.component.html'\n})\nexport class EmptyStateComponent implements OnInit {\n  /**\n   * The empty state config containing component properties\n   */\n  @Input() config: EmptyStateConfig;\n\n  /**\n   * The event emitted when an action is selected\n   */\n  @Output('onActionSelect') onActionSelect = new EventEmitter();\n\n  private defaultConfig = {\n    title: 'No Items Available'\n  } as EmptyStateConfig;\n  private prevConfig: EmptyStateConfig;\n\n  /**\n   * The default constructor\n   */\n  constructor() {\n  }\n\n  // Initialization\n\n  /**\n   *  Setup component configuration upon initialization\n   */\n  ngOnInit(): void {\n    this.setupConfig();\n  }\n\n  /**\n   *  Check if the component config has changed\n   */\n  ngDoCheck(): void {\n    // Do a deep compare on config\n    if (!isEqual(this.config, this.prevConfig)) {\n      this.setupConfig();\n    }\n  }\n\n  /**\n   * Set up default config\n   */\n  protected setupConfig(): void {\n    if (this.config !== undefined) {\n      defaults(this.config, this.defaultConfig);\n    } else {\n      this.config = cloneDeep(this.defaultConfig);\n    }\n    this.prevConfig = cloneDeep(this.config);\n  }\n\n  // Private\n\n  private handleAction(action: Action): void {\n    if (action && action.disabled !== true) {\n      this.onActionSelect.emit(action);\n    }\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
