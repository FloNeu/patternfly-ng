{"version":3,"file":"list-view.component.js","sourceRoot":"","sources":["../../../../src/app/list-view/list-view.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { Action } from '../models/action';\nimport { ListViewConfig } from './list-view-config';\nimport { ListViewEvent } from './list-view-event';\n\nimport { cloneDeep, defaults, isEqual, without } from 'lodash';\n\n/**\n * List view component\n *\n * For items, use a template named itemTemplate to contain content for each row. For each item in the items array, the\n * expansion can be disabled by setting disabled to true on the item. If using actions, use a template named\n * actionTemplate to contain expandable content for the actions of each row. If using expanding rows, use a template\n * named itemExpandedTemplate to contain expandable content for each row.\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-list-view',\n  styleUrls: ['./list-view.component.less'],\n  templateUrl: './list-view.component.html'\n})\nexport class ListViewComponent implements OnInit {\n  /**\n   * The name of the template containing actions for each row\n   */\n  @Input() actionTemplate: TemplateRef<any>;\n\n  /**\n   * The list view config containing component properties\n   */\n  @Input() config: ListViewConfig;\n\n  /**\n   * The name of the template used to contain expandable content for each row\n   */\n  @Input() itemExpandedTemplate: TemplateRef<any>;\n\n  /**\n   * An array of items to display in the list view\n   */\n  @Input() items: any[];\n\n  /**\n   * The name of the template containing items for each row\n   */\n  @Input() itemTemplate: TemplateRef<any>;\n\n  /**\n   * The event emitted when an action (e.g., button, kebab, etc.) has been selected\n   */\n  @Output('onActionSelect') onActionSelect = new EventEmitter();\n\n  /**\n   * The event emitted when a row checkbox has been selected\n   */\n  @Output('onCheckBoxChange') onCheckBoxChange = new EventEmitter();\n\n  /**\n   * The event emitted when a row has been clicked\n   */\n  @Output('onClick') onClick = new EventEmitter();\n\n  /**\n   * The event emitted when a row is double clicked\n   */\n  @Output('onDblClick') onDblClick = new EventEmitter();\n\n  /**\n   * The event emitted when a row is no longer dragged\n   */\n  // @Output('onDragEnd') onDragEnd = new EventEmitter();\n\n  /**\n   * The event emitted when a row is being dragged\n   */\n  // @Output('onDragMoved') onDragMoved = new EventEmitter();\n\n  /**\n   * The event emitted when a row begins to be dragged\n   */\n  // @Output('onDragStart') onDragStart = new EventEmitter();\n\n  /**\n   * The event emitted when a row has been selected\n   */\n  @Output('onSelect') onSelect = new EventEmitter();\n\n  /**\n   * The event emitted when a row selection has been changed\n   */\n  @Output('onSelectionChange') onSelectionChange = new EventEmitter();\n\n  private defaultConfig = {\n    selectItems: false,\n    multiSelect: false,\n    dblClick: false,\n    dragEnabled: false,\n    selectedItems: [],\n    selectionMatchProp: 'uuid',\n    checkDisabled: false,\n    useExpandingRows: false,\n    showSelectBox: true\n  } as ListViewConfig;\n  private dragItem: any;\n  private itemsEmpty: boolean = true;\n  private prevConfig: ListViewConfig;\n\n  /**\n   * The default constructor\n   */\n  constructor() {\n  }\n\n  // Initialization\n\n  /**\n   *  Setup component configuration upon initialization\n   */\n  ngOnInit(): void {\n    this.setupConfig();\n  }\n\n  /**\n   *  Check if the component config has changed\n   */\n  ngDoCheck(): void {\n    // Do a deep compare on config\n    if (!isEqual(this.config, this.prevConfig)) {\n      this.setupConfig();\n    }\n    this.itemsEmpty = !(this.items !== undefined && this.items.length > 0);\n  }\n\n  private setupConfig(): void {\n    if (this.config !== undefined) {\n      defaults(this.config, this.defaultConfig);\n    } else {\n      this.config = cloneDeep(this.defaultConfig);\n    }\n    if ((this.config.multiSelect === undefined || this.config.multiSelect === false)\n        && this.config.selectedItems && this.config.selectedItems.length > 0) {\n      this.config.selectedItems = [this.config.selectedItems[0]];\n    }\n    if (this.config.selectItems && this.config.showSelectBox) {\n      throw new Error('ListViewComponent - Illegal use: ' +\n        'Cannot use both select box and click selection at the same time.');\n    }\n    this.prevConfig = cloneDeep(this.config);\n  }\n\n  // Actions\n\n  private handleAction(action: Action): void {\n    if (action && action.disabled !== true) {\n      this.onActionSelect.emit(action);\n    }\n  }\n\n  // Checkbox\n\n  private checkBoxChange(item: any): void {\n    this.onCheckBoxChange.emit({\n      item: item\n    } as ListViewEvent);\n  }\n\n  private isSelected(item: any): boolean {\n    let matchProp = this.config.selectionMatchProp;\n    let selected = false;\n\n    if (this.config.showSelectBox) {\n      selected = item.selected;\n    } else if (this.config.selectItems !== undefined) {\n      this.config.selectedItems.forEach((itemObj) => {\n        if (itemObj[matchProp] === item[matchProp]) {\n          selected = true;\n        }\n      });\n    }\n    return selected;\n  }\n\n  // Drag and drop\n\n  private dragEnd(): void {\n    /* Todo: dnd not implemeneted\n    this.onDragEnd.emit({\n      item: this.dragItem\n    } as ListViewEvent);\n    */\n  }\n\n  private dragMoved(): void {\n    /* Todo: dnd not implemeneted\n    this.onDragMoved.emit({\n      item: this.dragItem\n    } as ListViewEvent);\n    */\n  }\n\n  private isDragOriginal(item: any): boolean {\n    return (item === this.dragItem);\n  }\n\n  private dragStart(item: any): void {\n    this.dragItem = item;\n    /* Todo: dnd not implemeneted\n    this.onDragStart.emit({\n      item: this.dragItem\n    } as ListViewEvent);\n    */\n  }\n\n  // Row Selection\n\n  private itemClick($event: MouseEvent, item: any): void {\n    let alreadySelected;\n    let selectionChanged = false;\n\n    // Ignore disabled item clicks completely\n    if (item.disabled === true) {\n      return;\n    }\n\n    if (this.config.selectItems) {\n      if (this.config.multiSelect && !this.config.dblClick) {\n        for (let i = 0; i < this.config.selectedItems.length - 1; i++) {\n          if (this.config.selectedItems[i] === item) {\n            alreadySelected = true;\n            break;\n          }\n        }\n        if (alreadySelected) {\n          // already selected so deselect\n          this.config.selectedItems = without(this.config.selectedItems, item);\n        } else {\n          // add the item to the selected items\n          this.config.selectedItems.push(item);\n          selectionChanged = true;\n        }\n      } else {\n        if (this.config.selectedItems[0] === item) {\n          if (!this.config.dblClick) {\n            this.config.selectedItems = [];\n            selectionChanged = true;\n          }\n        } else {\n          this.config.selectedItems = [item];\n          selectionChanged = true;\n        }\n      }\n\n      if (selectionChanged === true) {\n        this.onSelect.emit({\n          item: item\n        } as ListViewEvent);\n        this.onSelectionChange.emit({\n          item: item,\n          selectedItems: this.config.selectedItems\n        } as ListViewEvent);\n      }\n    }\n    this.onClick.emit({\n      item: item\n    } as ListViewEvent);\n  }\n\n  private dblClick($event: MouseEvent, item: any): void {\n    // Ignore disabled item clicks\n    if (this.config.dblClick === true && item.disabled !== true) {\n      this.onDblClick.emit({\n        item: item\n      } as ListViewEvent);\n    }\n  }\n\n  // Toggle\n\n  private closeExpandingRow(item: any): void {\n    item.expandingRowId = undefined;\n    item.isRowExpanded = false;\n  }\n\n  private toggleExpandingRow(item: any): void {\n    // Row may already be open due to compound expansion\n    if (item.isRowExpanded && item.expandingRowId !== undefined) {\n      item.expandingRowId = undefined;\n      return;\n    }\n    item.expandingRowId = undefined;\n    item.isRowExpanded = !item.isRowExpanded;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
