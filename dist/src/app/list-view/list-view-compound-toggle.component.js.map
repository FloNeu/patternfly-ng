{"version":3,"file":"list-view-compound-toggle.component.js","sourceRoot":"","sources":["../../../../src/app/list-view/list-view-compound-toggle.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAMuB;AAEvB;;GAEG;AAMH,IAAa,+BAA+B;IAK1C;IACA,CAAC;IAED,iBAAiB;IAEjB,kDAAQ,GAAR;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;YAC5B,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;QAC7E,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,KAAK,SAAS,CAAC,CAAC,CAAC;YACtC,MAAM,IAAI,KAAK,CAAC,mEAAmE,CAAC,CAAC;QACvF,CAAC;IACH,CAAC;IAED,UAAU;IAEV;;;;OAIG;IACH,uDAAa,GAAb;QACE,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,KAAK,IAAI,CAAC,cAAc,CAAC,CAAC;IAChG,CAAC;IAED;;OAEG;IACH,4DAAkB,GAAlB;QACE,0BAA0B;QAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,KAAK,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YAChF,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;YAC/C,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;IACrD,CAAC;IACH,sCAAC;AAAD,CAAC,AA1CD,IA0CC;AAzCU;IAAR,YAAK,EAAE;;uEAAwB;AACvB;IAAR,YAAK,EAAE;;6DAAW;AACV;IAAR,YAAK,EAAE;8BAAW,kBAAW;iEAAM;AAHzB,+BAA+B;IAL3C,gBAAS,CAAC;QACT,aAAa,EAAE,wBAAiB,CAAC,IAAI;QACrC,QAAQ,EAAE,gCAAgC;QAC1C,WAAW,EAAE,4CAA4C;KAC1D,CAAC;;GACW,+BAA+B,CA0C3C;AA1CY,0EAA+B","sourcesContent":["import {\n  Component,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\n/**\n * List view component.\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-list-view-compound-toggle',\n  templateUrl: './list-view-compound-toggle.component.html'\n})\nexport class ListViewCompoundToggleComponent implements OnInit {\n  @Input() expandingRowId: string;\n  @Input() item: any;\n  @Input() template: TemplateRef<any>;\n\n  constructor() {\n  }\n\n  // Initialization\n\n  ngOnInit(): void {\n    if (this.item === undefined) {\n      throw new Error('ListViewCompoundToggleComponent: item attribute not set');\n    }\n    if (this.expandingRowId === undefined) {\n      throw new Error('ListViewCompoundToggleComponent: expandingRowId attribute not set');\n    }\n  }\n\n  // Actions\n\n  /**\n   * Test if row is expanded based on given expanding row ID\n   *\n   * @returns {boolean} True if row is expanded\n   */\n  isRowExpanded(): boolean {\n    return (this.item.isRowExpanded === true && this.item.expandingRowId === this.expandingRowId);\n  }\n\n  /**\n   * Toggle expanding row open/close\n   */\n  toggleExpandingRow(): void {\n    // Row may already be open\n    if (this.item.isRowExpanded && this.item.expandingRowId !== this.expandingRowId) {\n      this.item.expandingRowId = this.expandingRowId;\n      return;\n    }\n    this.item.expandingRowId = this.expandingRowId;\n    this.item.isRowExpanded = !this.item.isRowExpanded;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}