{"version":3,"file":"filter.component.js","sourceRoot":"","sources":["../../../../src/app/filter/filter.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EACL,SAAS,EACT,YAAY,EACZ,KAAK,EAEL,MAAM,EACN,iBAAiB,EAClB,MAAM,eAAe,CAAC;AAGvB,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAG/C,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAE1D;;GAEG;AAOH,IAAa,eAAe;IAuB1B;;OAEG;IACH;QApBA;;WAEG;QACiB,aAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;QAElD;;WAEG;QACsB,mBAAc,GAAG,IAAI,YAAY,EAAE,CAAC;QAE7D;;WAEG;QACoB,gBAAW,GAAG,IAAI,YAAY,EAAE,CAAC;IAQxD,CAAC;IAED,iBAAiB;IAEjB;;OAEG;IACH,kCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED;;OAEG;IACH,mCAAS,GAAT;QACE,8BAA8B;QAC9B,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;IACH,CAAC;IAEO,qCAAW,GAAnB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,MAAM,GAAG,EAAkB,CAAC;QACnC,CAAC;QACD,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAEzC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,KAAK,SAAS,CAAC,CAAC,CAAC;YAC5D,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,EAAE,CAAC;QAClC,CAAC;IACH,CAAC;IAED,UAAU;IAEF,mCAAS,GAAjB,UAAkB,MAAmB;QACnC,IAAI,SAAS,GAAG;YACd,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,KAAK,EAAE,MAAM,CAAC,KAAK;SACV,CAAC;QAEZ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAClC,EAAE,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACtC,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;YACtC,CAAC;YACD,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC3C,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC;YACnD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7B,CAAC;IACH,CAAC;IAEO,+BAAK,GAAb,UAAc,MAAgB;QAC5B,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,MAAM,CAAC;QACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;YACjB,cAAc,EAAE,MAAM;SACR,CAAC,CAAC;IACpB,CAAC;IAEO,6CAAmB,GAA3B,UAA4B,MAAc;QACxC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,EAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,KAAK,EAAC,CAAC,CAAC;IAClE,CAAC;IAEO,uCAAa,GAArB,UAAsB,MAAmB;QACvC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnC,CAAC;IAEO,sCAAY,GAApB,UAAqB,MAAc;QACjC,IAAI,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;YACjD,KAAK,EAAE,MAAM,CAAC,KAAK;SACpB,CAAC,CAAC;QACH,MAAM,CAAC,WAAW,KAAK,SAAS,CAAC;IACnC,CAAC;IAEO,mCAAS,GAAjB,UAAkB,MAAW;QAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IACH,sBAAC;AAAD,CAAC,AAvGD,IAuGC;AAnGU;IAAR,KAAK,EAAE;8BAAS,YAAY;+CAAC;AAKV;IAAnB,MAAM,CAAC,UAAU,CAAC;;iDAA+B;AAKzB;IAAxB,MAAM,CAAC,eAAe,CAAC;;uDAAqC;AAKtC;IAAtB,MAAM,CAAC,aAAa,CAAC;;oDAAkC;AAnB7C,eAAe;IAN3B,SAAS,CAAC;QACT,aAAa,EAAE,iBAAiB,CAAC,IAAI;QACrC,QAAQ,EAAE,aAAa;QACvB,SAAS,EAAE,CAAC,yBAAyB,CAAC;QACtC,WAAW,EAAE,yBAAyB;KACvC,CAAC;;GACW,eAAe,CAuG3B;SAvGY,eAAe","sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { Filter } from './filter';\nimport { FilterConfig } from './filter-config';\nimport { FilterEvent } from './filter-event';\n\nimport { cloneDeep, find, isEqual, remove } from 'lodash';\n\n/**\n * Filter component\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-filter',\n  styleUrls: ['./filter.component.less'],\n  templateUrl: './filter.component.html'\n})\nexport class FilterComponent implements OnInit {\n  /**\n   * The filter config containing component properties\n   */\n  @Input() config: FilterConfig;\n\n  /**\n   * The event emitted when a filter has been changed\n   */\n  @Output('onChange') onChange = new EventEmitter();\n\n  /**\n   * The event emitted when a field menu option is selected\n   */\n  @Output('onFieldSelect') onFilterSelect = new EventEmitter();\n\n  /**\n   * The event emitted when the user types ahead in the query input field\n   */\n  @Output('onTypeAhead') onTypeAhead = new EventEmitter();\n\n  private prevConfig: FilterConfig;\n\n  /**\n   * The default constructor\n   */\n  constructor() {\n  }\n\n  // Initialization\n\n  /**\n   *  Setup component configuration upon initialization\n   */\n  ngOnInit(): void {\n    this.setupConfig();\n  }\n\n  /**\n   *  Check if the component config has changed\n   */\n  ngDoCheck(): void {\n    // Do a deep compare on config\n    if (!isEqual(this.config, this.prevConfig)) {\n      this.setupConfig();\n    }\n  }\n\n  private setupConfig(): void {\n    if (this.config === undefined) {\n      this.config = {} as FilterConfig;\n    }\n    this.prevConfig = cloneDeep(this.config);\n\n    if (this.config && this.config.appliedFilters === undefined) {\n      this.config.appliedFilters = [];\n    }\n  }\n\n  // Actions\n\n  private addFilter($event: FilterEvent): void {\n    let newFilter = {\n      field: $event.field,\n      query: $event.query,\n      value: $event.value\n    } as Filter;\n\n    if (!this.filterExists(newFilter)) {\n      if (newFilter.field.type === 'select') {\n        this.enforceSingleSelect(newFilter);\n      }\n      this.config.appliedFilters.push(newFilter);\n      $event.appliedFilters = this.config.appliedFilters;\n      this.onChange.emit($event);\n    }\n  }\n\n  private clear($event: Filter[]): void {\n    this.config.appliedFilters = $event;\n    this.onChange.emit({\n      appliedFilters: $event\n    } as FilterEvent);\n  }\n\n  private enforceSingleSelect(filter: Filter): void {\n    remove(this.config.appliedFilters, {title: filter.field.title});\n  }\n\n  private fieldSelected($event: FilterEvent): void {\n    this.onFilterSelect.emit($event);\n  }\n\n  private filterExists(filter: Filter): boolean {\n    let foundFilter = find(this.config.appliedFilters, {\n      value: filter.value\n    });\n    return foundFilter !== undefined;\n  }\n\n  private typeAhead($event: any) {\n    this.onTypeAhead.emit($event);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}