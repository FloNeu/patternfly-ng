{"version":3,"file":"filter.component.js","sourceRoot":"","sources":["../../../../src/app/filter/filter.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { Filter } from './filter';\nimport { FilterConfig } from './filter-config';\nimport { FilterEvent } from './filter-event';\n\nimport { cloneDeep, find, isEqual, remove } from 'lodash';\n\n/**\n * Component for the filter bar's filter entry components\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-filter',\n  styleUrls: ['./filter.component.less'],\n  templateUrl: './filter.component.html'\n})\nexport class FilterComponent implements OnInit {\n  @Input() config: FilterConfig;\n\n  @Output('onChange') onChange = new EventEmitter();\n  @Output('onFieldSelect') onFilterSelect = new EventEmitter();\n  @Output('onTypeAhead') onTypeAhead = new EventEmitter();\n\n  prevConfig: FilterConfig;\n\n  constructor() {\n  }\n\n  // Initialization\n\n  ngOnInit(): void {\n    this.setupConfig();\n  }\n\n  ngDoCheck(): void {\n    // Do a deep compare on config\n    if (!isEqual(this.config, this.prevConfig)) {\n      this.setupConfig();\n    }\n  }\n\n  setupConfig(): void {\n    if (this.config === undefined) {\n      this.config = {} as FilterConfig;\n    }\n    this.prevConfig = cloneDeep(this.config);\n\n    if (this.config && this.config.appliedFilters === undefined) {\n      this.config.appliedFilters = [];\n    }\n  }\n\n  // Filter functions\n\n  addFilter($event: FilterEvent): void {\n    let newFilter = {\n      field: $event.field,\n      query: $event.query,\n      value: $event.value\n    } as Filter;\n\n    if (!this.filterExists(newFilter)) {\n      if (newFilter.field.type === 'select') {\n        this.enforceSingleSelect(newFilter);\n      }\n      this.config.appliedFilters.push(newFilter);\n      $event.appliedFilters = this.config.appliedFilters;\n      this.onChange.emit($event);\n    }\n  }\n\n  clear($event: Filter[]): void {\n    this.config.appliedFilters = $event;\n    this.onChange.emit({\n      appliedFilters: $event\n    } as FilterEvent);\n  }\n\n  fieldSelected($event: FilterEvent): void {\n    this.onFilterSelect.emit($event);\n  }\n\n  filterExists(filter: Filter): boolean {\n    let foundFilter = find(this.config.appliedFilters, {\n      value: filter.value\n    });\n    return foundFilter !== undefined;\n  }\n\n  typeAhead($event: any) {\n    this.onTypeAhead.emit($event);\n  }\n\n  // Private\n\n  private enforceSingleSelect(filter: Filter): void {\n    remove(this.config.appliedFilters, {title: filter.field.title});\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}