{"version":3,"file":"filter-fields.component.js","sourceRoot":"","sources":["../../../../src/app/filters/filter-fields.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { FilterConfig } from './filter-config';\nimport { FilterEvent } from './filter-event';\nimport { FilterField } from './filter-field';\nimport { FilterQuery } from './filter-query';\n\nimport * as _ from 'lodash';\n\n/**\n * Component for the filter bar's filter entry components\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-filter-fields',\n  styleUrls: ['./filter-fields.component.less'],\n  templateUrl: './filter-fields.component.html'\n})\nexport class FilterFieldsComponent implements OnInit {\n  @Input() config: FilterConfig;\n\n  @Output('onAdd') onAdd = new EventEmitter();\n  @Output('onFilterQueries') onFilterQueries = new EventEmitter();\n  @Output('onFieldSelect') onFieldSelect = new EventEmitter();\n\n  currentField: FilterField;\n  currentValue: string;\n  prevConfig: FilterConfig;\n  show: boolean = false;\n\n  constructor() {\n  }\n\n  // Initialization\n\n  ngOnInit(): void {\n    this.setupConfig();\n  }\n\n  ngDoCheck(): void {\n    // Do a deep compare on config\n    if (!_.isEqual(this.config, this.prevConfig)) {\n      this.setupConfig();\n    }\n  }\n\n  setupConfig(): void {\n    if (this.config === undefined) {\n      this.config = {} as FilterConfig;\n    }\n    this.prevConfig = _.cloneDeep(this.config);\n\n    if (this.config && this.config.fields === undefined) {\n      this.config.fields = [];\n    }\n    if (this.config && this.config.tooltipPlacement === undefined) {\n      this.config.tooltipPlacement = 'top';\n    }\n\n    let fieldFound: boolean = false;\n    if (this.currentField !== undefined) {\n      _.find(this.config.fields, (nextField) => {\n        if (nextField.id === this.currentField.id) {\n          fieldFound = true;\n          return;\n        }\n      });\n    }\n    if (!fieldFound) {\n      this.currentField = this.config.fields[0];\n      this.currentValue = null;\n    }\n\n    if (this.currentValue === undefined) {\n      this.currentValue = null;\n    }\n  }\n\n  // Field functions\n\n  filterQueries(value: string) {\n    this.onFilterQueries.emit({\n      field: this.currentField,\n      value: this.currentValue\n    } as FilterEvent);\n  }\n\n  onValueKeyPress(keyEvent: KeyboardEvent): void {\n    if (keyEvent.which === 13) {\n      this.onAdd.emit({\n        field: this.currentField,\n        value: this.currentValue\n      } as FilterEvent);\n      this.currentValue = undefined;\n    }\n  }\n\n  selectField(field: FilterField): void {\n    this.currentField = field;\n    this.currentValue = null;\n    this.onFieldSelect.emit({\n      field: this.currentField,\n      value: this.currentValue\n    } as FilterEvent);\n  }\n\n  selectValue(filterQuery: FilterQuery): void {\n    if (filterQuery != null) {\n      this.onAdd.emit({\n        field: this.currentField,\n        query: filterQuery,\n        value: filterQuery.value\n      } as FilterEvent);\n      this.currentValue = null;\n    }\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}