{"version":3,"file":"toast-notification.component.js","sourceRoot":"","sources":["../../../../src/app/notification/toast-notification.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAOuB;AAEvB,2CAA0C;AAC1C,+CAA8C;AAS9C,IAAa,0BAA0B;IAerC;QAN0B,mBAAc,GAAG,IAAI,mBAAY,EAAE,CAAC;QACrC,kBAAa,GAAG,IAAI,mBAAY,EAAE,CAAC;QACjC,oBAAe,GAAG,IAAI,mBAAY,EAAE,CAAC;QAEhE,oBAAe,GAAY,KAAK,CAAC;IAGjC,CAAC;IAED,iBAAiB;IAEjB,6CAAQ,GAAR;IACA,CAAC;IAED,8CAAS,GAAT;QACE,IAAI,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC;eACzC,CAAC,IAAI,CAAC,WAAW,KAAK,SAAS;mBAC/B,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;IACxC,CAAC;IAED,mBAAmB;IAEnB,iDAAY,GAAZ,UAAa,MAAc;QACzB,EAAE,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;gBACvB,MAAM,EAAE,MAAM;gBACd,YAAY,EAAE,IAAI,CAAC,YAAY;aACX,CAAC,CAAC;QAC1B,CAAC;IACH,CAAC;IAED,gDAAW,GAAX,UAAY,MAAkB;QAC5B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAC,YAAY,EAAE,IAAI,CAAC,YAAY,EAAsB,CAAC,CAAC;IAClF,CAAC;IAED,gDAAW,GAAX,UAAY,MAAkB;QAC5B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;YACxB,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,SAAS,EAAE,IAAI;SACK,CAAC,CAAC;IAC1B,CAAC;IAED,gDAAW,GAAX,UAAY,MAAkB;QAC5B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;YACxB,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,SAAS,EAAE,KAAK;SACI,CAAC,CAAC;IAC1B,CAAC;IACH,iCAAC;AAAD,CAAC,AAzDD,IAyDC;AAxDU;IAAR,YAAK,EAAE;;0DAAgB;AACf;IAAR,YAAK,EAAE;;2DAAiB;AAChB;IAAR,YAAK,EAAE;;+DAAuB;AACtB;IAAR,YAAK,EAAE;8BAAe,2BAAY;gEAAC;AAC3B;IAAR,YAAK,EAAE;8BAAgB,eAAM;iEAAC;AACtB;IAAR,YAAK,EAAE;;6DAAoB;AACnB;IAAR,YAAK,EAAE;;wDAAc;AAEI;IAAzB,aAAM,CAAC,gBAAgB,CAAC;;kEAAqC;AACrC;IAAxB,aAAM,CAAC,eAAe,CAAC;;iEAAoC;AACjC;IAA1B,aAAM,CAAC,iBAAiB,CAAC;;mEAAsC;AAXrD,0BAA0B;IANtC,gBAAS,CAAC;QACT,aAAa,EAAE,wBAAiB,CAAC,IAAI;QACrC,QAAQ,EAAE,yBAAyB;QACnC,SAAS,EAAE,CAAC,qCAAqC,CAAC;QAClD,WAAW,EAAE,qCAAqC;KACnD,CAAC;;GACW,0BAA0B,CAyDtC;AAzDY,gEAA0B","sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { Action } from '../models/action';\nimport { Notification } from './notification';\nimport { NotificationEvent } from './notification-event';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-toast-notification',\n  styleUrls: ['./toast-notification.component.less'],\n  templateUrl: './toast-notification.component.html'\n})\nexport class ToastNotificationComponent implements OnInit {\n  @Input() header: string;\n  @Input() message: string;\n  @Input() moreActions: Action[];\n  @Input() notification: Notification;\n  @Input() primaryAction: Action;\n  @Input() showClose: boolean;\n  @Input() type: string;\n\n  @Output('onActionSelect') onActionSelect = new EventEmitter();\n  @Output('onCloseSelect') onCloseSelect = new EventEmitter();\n  @Output('onViewingChange') onViewingChange = new EventEmitter();\n\n  showCloseButton: boolean = false;\n\n  constructor() {\n  }\n\n  // Initialization\n\n  ngOnInit(): void {\n  }\n\n  ngDoCheck(): void {\n    this.showCloseButton = (this.showClose === true)\n        && (this.moreActions === undefined\n        || this.moreActions.length === 0);\n  }\n\n  // Action functions\n\n  handleAction(action: Action): void {\n    if (action && action.disabled !== true) {\n      this.onActionSelect.emit({\n        action: action,\n        notification: this.notification\n      } as NotificationEvent);\n    }\n  }\n\n  handleClose($event: MouseEvent): void {\n    this.onCloseSelect.emit({notification: this.notification} as NotificationEvent);\n  }\n\n  handleEnter($event: MouseEvent): void {\n    this.onViewingChange.emit({\n      notification: this.notification,\n      isViewing: true\n    } as NotificationEvent);\n  }\n\n  handleLeave($event: MouseEvent): void {\n    this.onViewingChange.emit({\n      notification: this.notification,\n      isViewing: false\n    } as NotificationEvent);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}