{"version":3,"file":"sort.component.js","sourceRoot":"","sources":["../../../../src/app/sort/sort.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { SortConfig } from './sort-config';\nimport { SortField } from './sort-field';\nimport { SortEvent } from './sort-event';\n\nimport { cloneDeep, defaults, isEqual } from 'lodash';\n\n/**\n * Sort component\n */\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'pfng-sort',\n  styleUrls: ['./sort.component.less'],\n  templateUrl: './sort.component.html'\n})\nexport class SortComponent implements OnInit {\n  /**\n   * The sort config containing component properties\n   */\n  @Input() config: SortConfig;\n\n  /**\n   * The event emitted when the sort has changed\n   */\n  @Output('onChange') onChange = new EventEmitter();\n\n  private currentField: SortField;\n  private defaultConfig: SortConfig = {\n    isAscending: true,\n    visible: true\n  } as SortConfig;\n  private prevConfig: SortConfig;\n\n  /**\n   * The default constructor\n   */\n  constructor() {\n  }\n\n  /**\n   *  Setup component configuration upon initialization\n   */\n  ngOnInit(): void {\n    this.setupConfig();\n  }\n\n  /**\n   *  Check if the component config has changed\n   */\n  ngDoCheck(): void {\n    // Do a deep compare on config\n    if (!isEqual(this.config, this.prevConfig)) {\n      this.setupConfig();\n    }\n  }\n\n  private setupConfig(): void {\n    if (this.config !== undefined) {\n      defaults(this.config, this.defaultConfig);\n    } else {\n      this.config = cloneDeep(this.defaultConfig);\n    }\n\n    if (this.config && this.config.fields && this.config.fields.length > 0) {\n      if (this.currentField === undefined) {\n        this.currentField = this.config.fields[0];\n      }\n      if (this.config.isAscending === undefined) {\n        this.config.isAscending = true;\n      }\n    }\n  }\n\n  // Actions\n\n  private getIconStyleClass(): string {\n    let iconStyleClass: string;\n    if (this.currentField && this.currentField.sortType\n        && this.currentField.sortType === 'numeric') {\n      if (this.config.isAscending) {\n        iconStyleClass = 'fa fa-sort-numeric-asc';\n      } else {\n        iconStyleClass = 'fa fa-sort-numeric-desc';\n      }\n    } else {\n      if (this.config.isAscending) {\n        iconStyleClass = 'fa fa-sort-alpha-asc';\n      } else {\n        iconStyleClass = 'fa fa-sort-alpha-desc';\n      }\n    }\n    return iconStyleClass;\n  }\n\n  private onChangeDirection(): void {\n    this.config.isAscending = !this.config.isAscending;\n    this.onChange.emit({\n      field: this.currentField,\n      isAscending: this.config.isAscending\n    } as SortEvent);\n  }\n\n  private selectField(field: SortField): void {\n    this.currentField = field;\n    this.onChange.emit({\n      field: this.currentField,\n      isAscending: this.config.isAscending\n    } as SortEvent);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
